{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\AYKTK21009 Teht\\xE4v\\xE4t\\\\1\\\\1.6\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const title = 'Give feedback';\n  let votes = {\n    good_votes: 0,\n    neutral_votes: 0,\n    bad_votes: 0\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Buttons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Table, {\n    votes: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nconst Header = props => {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.title);\n};\n\nconst Buttons = () => {\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Vote up\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Vote neutral\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Vote down\"));\n};\n\nconst Table = props => {\n  let i = props.votes;\n  let combined = i.good_votes + i.bad_votes + i.neutral_votes;\n  let average = (i.good_votes + i.neutral_votes * 0.5) / combined;\n\n  if (!average) {\n    average = 0;\n  }\n\n  let positive_percent = i.good_votes / combined;\n\n  if (!positive_percent) {\n    positive_percent = 0;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Voting statistics\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Tablerow, {\n    title: \"Good votes\",\n    value: i.good_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Neutral votes\",\n    value: i.neutral_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Bad votes\",\n    value: i.bad_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"All votes\",\n    value: combined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Average\",\n    value: average,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Positive %\",\n    value: positive_percent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nconst Tablerow = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.value));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\wamp64\\www\\AYKTK21009 Tehtävät\\1\\1.6\\src\\index.js"],"names":["React","ReactDOM","App","title","votes","good_votes","neutral_votes","bad_votes","Header","props","Buttons","Table","i","combined","average","positive_percent","Tablerow","value","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n    const title = 'Give feedback';\n\n    let votes = {\n        good_votes: 0,\n        neutral_votes: 0,\n        bad_votes: 0\n    }\n\n    return (\n        <div>\n            <Header title={title}/>\n            <Buttons/>\n            <Table votes={votes}/>\n        </div>\n    )\n}\n\nconst Header = (props) => {\n    return (\n        <h1>{props.title}</h1>\n    )\n}\n\nconst Buttons = () => {\n    return (\n        <>\n            <button>Vote up</button>\n            <button>Vote neutral</button>\n            <button>Vote down</button>\n        </>\n    )\n}\n\nconst Table = (props) => {\n    let i = props.votes;\n    let combined = i.good_votes + i.bad_votes + i.neutral_votes;\n    let average = (i.good_votes + (i.neutral_votes * 0.5)) / combined;\n    if(!average) {average = 0}\n    let positive_percent = i.good_votes / combined;\n    if(!positive_percent) {positive_percent = 0}\n    return (\n        <div>\n        <h2>Voting statistics</h2>\n        <table>\n            <tbody>\n            <Tablerow title=\"Good votes\" value={i.good_votes}/>\n            <Tablerow title=\"Neutral votes\" value={i.neutral_votes}/>\n            <Tablerow title=\"Bad votes\" value={i.bad_votes}/>\n            <Tablerow title=\"All votes\" value={combined} />\n            <Tablerow title=\"Average\" value={average}/>\n            <Tablerow title=\"Positive %\" value={positive_percent}/>\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nconst Tablerow = (props) => {\n    return (\n        <tr>\n            <td>{props.title}</td>\n            <td>{props.value}</td>\n        </tr>\n    )\n}\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}