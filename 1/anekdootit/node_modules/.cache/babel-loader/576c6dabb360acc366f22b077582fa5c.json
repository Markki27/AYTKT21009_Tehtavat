{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\AYKTK21009 Teht\\xE4v\\xE4t\\\\1\\\\1.6\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = votes => {\n  const title = 'Give feedback';\n  /*\n  let votes = {\n      good_votes: 0,\n      neutral_votes: 0,\n      bad_votes: 0\n  }\n  */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Buttons, {\n    votes: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Table, {\n    votes: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nconst Header = props => {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.title);\n};\n\nconst Buttons = props => {\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => refresh('up', props.votes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Vote up\"), React.createElement(\"button\", {\n    onClick: () => refresh('neutral', props.votes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Vote neutral\"), React.createElement(\"button\", {\n    onClick: () => refresh('down', props.votes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Vote down\"));\n};\n\nconst Table = props => {\n  let i = props.votes;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Voting statistics\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Tablerow, {\n    title: \"Good votes\",\n    value: i.good_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Neutral votes\",\n    value: i.neutral_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Tablerow, {\n    title: \"Bad votes\",\n    value: i.bad_votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n};\n\nconst Tablerow = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.value));\n};\n\nconst refresh = (type, votes) => {\n  if (type === 'up') {\n    votes.good_votes++;\n  }\n\n  if (type === 'neutral') {\n    votes.neutral_votes++;\n  }\n\n  if (type === 'down') {\n    votes.bad_votes++;\n  }\n\n  ReactDOM.render(React.createElement(App, {\n    votes: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\wamp64\\www\\AYKTK21009 Tehtävät\\1\\1.6\\src\\index.js"],"names":["React","ReactDOM","App","votes","title","Header","props","Buttons","refresh","Table","i","good_votes","neutral_votes","bad_votes","Tablerow","value","type","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = (votes) => {\n    const title = 'Give feedback';\n\n    /*\n    let votes = {\n        good_votes: 0,\n        neutral_votes: 0,\n        bad_votes: 0\n    }\n    */\n    return (\n        <div>\n            <Header title={title}/>\n            <Buttons votes={votes}/>\n            <Table votes={votes}/>\n        </div>\n    )\n}\n\nconst Header = (props) => {\n    return (\n        <h1>{props.title}</h1>\n    )\n}\n\nconst Buttons = (props) => {\n    return (\n        <>\n            <button onClick={() => refresh('up', props.votes)}>Vote up</button>\n            <button onClick={() => refresh('neutral', props.votes)}>Vote neutral</button>\n            <button onClick={() => refresh('down', props.votes)}>Vote down</button>\n        </>\n    )\n}\n\nconst Table = (props) => {\n    let i = props.votes;\n\n    return (\n        <div>\n        <h2>Voting statistics</h2>\n        <table>\n            <tbody>\n            <Tablerow title=\"Good votes\" value={i.good_votes}/>\n            <Tablerow title=\"Neutral votes\" value={i.neutral_votes}/>\n            <Tablerow title=\"Bad votes\" value={i.bad_votes}/>\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nconst Tablerow = (props) => {\n    return (\n        <tr>\n            <td>{props.title}</td>\n            <td>{props.value}</td>\n        </tr>\n    )\n}\n\nconst refresh = (type,votes) => {\n    if(type === 'up') {\n        votes.good_votes++;\n    }\n    if(type === 'neutral') {\n        votes.neutral_votes++;\n    }\n    if(type === 'down') {\n        votes.bad_votes++;\n    }\n    ReactDOM.render(<App votes={votes}/>, document.getElementById('root'))\n}\n\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}