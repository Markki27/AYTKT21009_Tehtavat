{"ast":null,"code":"import _slicedToArray from \"C:\\\\wamp64\\\\www\\\\AYKTK21009 Teht\\xE4v\\xE4t\\\\1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\AYKTK21009 Teht\\xE4v\\xE4t\\\\1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = ({\n  title\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, title);\n\nconst Button = ({\n  onClick,\n  text\n}) => React.createElement(\"button\", {\n  onClick: onClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, text);\n\nconst Statistics = ({\n  upvotes,\n  neutralvotes,\n  downvotes\n}) => {\n  const all = upvotes + neutralvotes + downvotes;\n  const average_value = (upvotes * 1 + neutralvotes * 0 + downvotes * -1) / all;\n  const positive_percent = upvotes * 100 / all + \" %\";\n\n  if (all === 0) {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"No feedback given.\"));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    text: \"Good\",\n    value: upvotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Neutral\",\n    value: neutralvotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Bad\",\n    value: downvotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"All\",\n    value: all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Average\",\n    value: average_value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    text: \"Positive\",\n    value: positive_percent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n};\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, text), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, value));\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        upvotes = _useState2[0],\n        setUpvote = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutralvotes = _useState4[0],\n        setNeutralvote = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        downvotes = _useState6[0],\n        setDownvote = _useState6[1];\n\n  const handleUpClick = () => {\n    setUpvote(upvotes + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutralvote(neutralvotes + 1);\n  };\n\n  const handleDownClick = () => {\n    setDownvote(downvotes + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: \"Give feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleUpClick,\n    text: \"Good vote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutralClick,\n    text: \"Neutral vote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleDownClick,\n    text: \"Bad vote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    upvotes: upvotes,\n    neutralvotes: neutralvotes,\n    downvotes: downvotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\wamp64\\www\\AYKTK21009 Tehtävät\\1\\unicafe\\src\\index.js"],"names":["React","useState","ReactDOM","Header","title","Button","onClick","text","Statistics","upvotes","neutralvotes","downvotes","all","average_value","positive_percent","Statistic","value","App","setUpvote","setNeutralvote","setDownvote","handleUpClick","handleNeutralClick","handleDownClick","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAL,CAA5B;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA2BC,IAA3B,CAApC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AAEvD,QAAMC,GAAG,GAAGH,OAAO,GAAGC,YAAV,GAAyBC,SAArC;AACA,QAAME,aAAa,GAAG,CAACJ,OAAO,GAAC,CAAR,GAAYC,YAAY,GAAC,CAAzB,GAA6BC,SAAS,GAAC,CAAC,CAAzC,IAA8CC,GAApE;AACA,QAAME,gBAAgB,GAAGL,OAAO,GAAG,GAAV,GAAgBG,GAAhB,GAAsB,IAA/C;;AAEA,MAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADA,CADJ;AAKH;;AAED,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAEH,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAEC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAEC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAEC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAEC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAMA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAEC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADJ,CAFJ,CADJ;AAeH,CA7BD;;AA+BA,MAAMC,SAAS,GAAG,CAAC;AAACR,EAAAA,IAAD;AAAOS,EAAAA;AAAP,CAAD,KAAmB;AACjC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,KAAL,CAFJ,CADJ;AAMH,CAPD;;AASA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACehB,QAAQ,CAAC,CAAD,CADvB;AAAA;AAAA,QACPQ,OADO;AAAA,QACES,SADF;;AAAA,qBAEyBjB,QAAQ,CAAC,CAAD,CAFjC;AAAA;AAAA,QAEPS,YAFO;AAAA,QAEOS,cAFP;;AAAA,qBAGmBlB,QAAQ,CAAC,CAAD,CAH3B;AAAA;AAAA,QAGPU,SAHO;AAAA,QAGIS,WAHJ;;AAKd,QAAMC,aAAa,GAAG,MAAM;AACxBH,IAAAA,SAAS,CAACT,OAAO,GAAG,CAAX,CAAT;AACH,GAFD;;AAIA,QAAMa,kBAAkB,GAAG,MAAM;AAC7BH,IAAAA,cAAc,CAACT,YAAY,GAAG,CAAhB,CAAd;AACH,GAFD;;AAIA,QAAMa,eAAe,GAAG,MAAM;AAC1BH,IAAAA,WAAW,CAACT,SAAS,GAAG,CAAb,CAAX;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,aAAjB;AAAgC,IAAA,IAAI,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAqC,IAAA,IAAI,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,eAAjB;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEd,OAArB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAA0D,IAAA,SAAS,EAAEC,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH,CA1BD;;AA4BAT,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB","sourcesContent":["import React, {useState} from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Header = ({title}) => <h1>{title}</h1>\r\nconst Button = ({onClick, text}) => <button onClick={onClick}>{text}</button>\r\n\r\nconst Statistics = ({upvotes, neutralvotes, downvotes}) => {\r\n\r\n    const all = upvotes + neutralvotes + downvotes\r\n    const average_value = (upvotes*1 + neutralvotes*0 + downvotes*-1) / all\r\n    const positive_percent = upvotes * 100 / all + \" %\"\r\n\r\n    if (all === 0) {\r\n        return (\r\n            <>\r\n            <p>No feedback given.</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Statistics</h1>\r\n            <table>\r\n                <tbody>\r\n                <Statistic text=\"Good\" value={upvotes}/>\r\n                <Statistic text=\"Neutral\" value={neutralvotes}/>\r\n                <Statistic text=\"Bad\" value={downvotes}/>\r\n                <Statistic text=\"All\" value={all}/>\r\n                <Statistic text=\"Average\" value={average_value}/>\r\n                <Statistic text=\"Positive\" value={positive_percent}/>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Statistic = ({text, value}) => {\r\n    return (\r\n        <tr>\r\n            <td>{text}</td>\r\n            <td>{value}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [upvotes, setUpvote] = useState(0)\r\n    const [neutralvotes, setNeutralvote] = useState(0)\r\n    const [downvotes, setDownvote] = useState(0)\r\n\r\n    const handleUpClick = () => {\r\n        setUpvote(upvotes + 1)\r\n    }\r\n\r\n    const handleNeutralClick = () => {\r\n        setNeutralvote(neutralvotes + 1)\r\n    }\r\n\r\n    const handleDownClick = () => {\r\n        setDownvote(downvotes + 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title='Give feedback'/>\r\n            <Button onClick={handleUpClick} text='Good vote'/>\r\n            <Button onClick={handleNeutralClick} text='Neutral vote'/>\r\n            <Button onClick={handleDownClick} text='Bad vote'/>\r\n            <Statistics upvotes={upvotes} neutralvotes={neutralvotes} downvotes={downvotes} />\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}